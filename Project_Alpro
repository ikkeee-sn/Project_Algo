#include <iostream>
#include <iomanip>
#include <string>
#include <fstream>
using namespace std;
void menu();
struct Bimbel {
    int id;
    string nama;
    string paket;
    int usia;
    string telepon;
    Bimbel* next;
};
Bimbel* head = nullptr;
bool login() {
    string user, pass;
    const string USERNAME = "admin";
    const string PASSWORD = "123";

    cout << "==============================\n";
    cout << "|         LOGIN ADMIN        |\n";
    cout << "==============================\n";
    cout << "Username : ";
    getline(cin, user);
    cout << "Password : ";
    getline(cin, pass);

    if (user == USERNAME && pass == PASSWORD) {
        cout << "Login berhasil!\n";
        return true;
    } else {
        cout << "Login gagal! Username atau password salah.\n";
        return false;
    }
}
void simpanKeFile() {
    ofstream file("murid.txt");
    Bimbel* temp = head;
    while (temp) {
        file << temp->id << ";"
             << temp->nama << ";"
             << temp->paket << ";"
             << temp->usia << ";"
             << temp->telepon << "\n";
        temp = temp->next;
    }
    file.close();
}
void bacaDariFile() {
    ifstream file("murid.txt");
    if (!file) return;

    int id, usia;
    string nama, paket, telepon;

    while (file >> id) {
        file.ignore(); 
        getline(file, nama, ';');
        getline(file, paket, ';');
        file >> usia;
        file.ignore(); 
        getline(file, telepon);

        Bimbel* baru = new Bimbel{ id, nama, paket, usia, telepon, head };
        head = baru;
    }
    file.close();
}
void tambahMurid() {
    int n;
    cout << "\n=========================================\n";
    cout << "|         INPUT Data Murid             |\n";
    cout << "========================================\n";
    cout << "\nMasukkan jumlah murid yang ingin ditambahkan: ";
    cin >> n;
    cin.ignore();

    for (int i = 0; i < n; ++i) {
        Bimbel* baru = new Bimbel();
        cout << "\nData ke-" << i + 1 << endl;
        cout << "ID         : "; cin >> baru->id; cin.ignore();
        cout << "Nama Murid : "; getline(cin, baru->nama);
        cout << "Paket      : "; getline(cin, baru->paket);
        cout << "Usia       : "; cin >> baru->usia;
        cout << "Telepon    : "; cin >> baru->telepon;
        cin.ignore();
        baru->next = head;
        head = baru;
    }

    simpanKeFile();
    cout << "Data berhasil disimpan!\n";
    char kembali;
    cout << "Kembali ke Menu Utama (y/n)? ";
    cin >> kembali;

    if (toupper(kembali) == 'Y') {
        menu();
    }
}

void cetakTabel(Bimbel* arr[], int size, string judul) {
    cout << "\n============================= " << judul << " =============================\n";
    cout << "========================================================================\n";
    cout << "|    ID    |    Nama Murid    |   Paket  |    Usia    | No Telepon |\n";
    cout << "========================================================================\n";
    for (int i = 0; i < size; ++i) {
        cout << "| " << setw(8) << arr[i]->id
             << " | " << setw(16) << arr[i]->nama
             << " | " << setw(8) << arr[i]->paket
             << " | " << setw(10) << arr[i]->usia
             << " | " << setw(10) << arr[i]->telepon << " |\n";
    }
    cout << "========================================================================\n";
}

void tampilMurid() {
    if (!head) {
        cout << "Data kosong!\n";
        return;
    }

    cout << "\n========================= DATA MURID =========================\n";
    cout << "=======================================================================\n";
    cout << "|    ID    |    Nama Murid    |   Paket  |    Usia    | No Telepon |\n";
    cout << "=======================================================================\n";

    Bimbel* temp = head;
    while (temp) {
        cout << "| " << setw(8) << temp->id
             << " | " << setw(16) << temp->nama
             << " | " << setw(8) << temp->paket
             << " | " << setw(10) << temp->usia
             << " | " << setw(10) << temp->telepon << " |\n";
        temp = temp->next;
    }
    cout << "=======================================================================\n";
    char kembali;
    cout << "Kembali ke Menu Utama (y/n)? ";
    cin >> kembali;

    if (toupper(kembali) == 'Y') {
        menu();
    }
}
void urutkanData() {
    if (!head) {
        cout << "Data kosong!\n";
        return;
    }

    int count = 0;
    Bimbel* temp = head;
    while (temp) {
        count++;
        temp = temp->next;
    }

    Bimbel** arr = new Bimbel*[count];
    temp = head;
    for (int i = 0; i < count; ++i) {
        arr[i] = temp;
        temp = temp->next;
    }

    int pilihan;
    cout << "\n========================================\n";
    cout << "|     Urutkan Data Berdasarkan ID      |\n";
    cout << "========================================\n";
    cout << "| 1. Dari ID Terkecil ke Terbesar      |\n";
    cout << "| 2. Dari ID Terbesar ke Terkecil      |\n";
    cout << "========================================\n";
    cout << "Pilih opsi: ";
    cin >> pilihan;

    for (int i = 0; i < count - 1; ++i) {
        for (int j = 0; j < count - i - 1; ++j) {
            bool kondisi = (pilihan == 1) ? arr[j]->id > arr[j + 1]->id
                                          : arr[j]->id < arr[j + 1]->id;
            if (kondisi) {
                swap(arr[j], arr[j + 1]);
            }
        }
    }

    string judul = (pilihan == 1) ? "ID Terkecil ke Terbesar" : "ID Terbesar ke Terkecil";
    cetakTabel(arr, count, judul);
    delete[] arr;
    char kembali;
    cout << "Kembali ke Menu Utama (y/n)? ";
    cin >> kembali;

    if (toupper(kembali) == 'Y') {
        menu();
    }
}

void cariMurid() {
    if (!head) {
        cout << "Data kosong!\n";
        return;
    }

    string namaCari;
    cout << "Masukkan nama murid yang dicari: ";
    getline(cin, namaCari);

    Bimbel* temp = head;
    bool ditemukan = false;
    cout << "\nHasil Pencarian:\n";
    cout << "=====================================================================\n";
    cout << "|    ID     |    Nama    |   Paket   | Usia |     Telepon     |\n";
    cout << "=====================================================================\n";

while (temp) {
    if (temp->nama == namaCari) {
        cout << "| " << setw(9) << temp->id
             << " | " << setw(10) << temp->nama
             << " | " << setw(9) << temp->paket
             << " | " << setw(4) << temp->usia
             << " | " << setw(15) << temp->telepon << " |\n";
        ditemukan = true;
    }
    temp = temp->next;
}

    if (!ditemukan) {
        cout << "| Data murid tidak ditemukan.                           |\n";
    }
    cout << "=====================================================================\n";
    char kembali;
    cout << "Kembali ke Menu Utama (y/n)? ";
    cin >> kembali;

    if (toupper(kembali) == 'Y') {
        menu();
    }
}

void hapusMurid() {
    if (!head) {
        cout << "Data kosong!\n";
        return;
    }

    cout << "\n==============================  HAPUS DATA  ===============================\n";
    cout << "========================================================================\n";
    cout << "|    ID    |    Nama Murid    |   Paket  |    Usia    | No Telepon   |\n";
    cout << "========================================================================\n";

    Bimbel* temp = head;
    while (temp) {
        cout << "| " << setw(8) << temp->id
             << " | " << setw(16) << temp->nama
             << " | " << setw(8) << temp->paket
             << " | " << setw(10) << temp->usia
             << " | " << setw(10) << temp->telepon << " |\n";
        temp = temp->next;
    }

    cout << "========================================================================\n";
    cout << "\nMasukkan nama murid yang ingin dihapus: ";
    string nama;
    getline(cin, nama);

    temp = head;
    Bimbel* prev = nullptr;

    while (temp) {
        if (temp->nama == nama) {
            if (!prev) head = temp->next;
            else prev->next = temp->next;
            delete temp;
            simpanKeFile();
            cout << "\nData berhasil dihapus.\n";
            return;
        }
        prev = temp;
        temp = temp->next;
    }

    cout << "\nData tidak ditemukan.\n";
    char kembali;
    cout << "Kembali ke Menu Utama (y/n)? ";
    cin >> kembali;

    if (toupper(kembali) == 'Y') {
        menu();
    }
}

void menu() {
    int pilih;
    do {
        cout << "\n========================================\n";
        cout << "|    SISTEM MANAJEMEN TEMPAT BIMBEL    |\n";
        cout << "========================================\n";
        cout << "| 1. Tambahkan Data Murid              |\n";
        cout << "| 2. Tampilkan Data Murid              |\n";
        cout << "| 3. Cari Nama Murid                   |\n";
        cout << "| 4. Hapus Data Murid                  |\n";
        cout << "| 5. Urutkan Data Berdasarkan ID       |\n";
        cout << "| 0. Keluar                            |\n";
        cout << "========================================\n";
        cout << "Pilih menu: ";
        cin >> pilih;
        cin.ignore();

        switch (pilih) {
            case 1:
                tambahMurid();
                break;
            case 2:
                tampilMurid();
                break;
            case 3:
                cariMurid();
                break;
            case 4:
                hapusMurid();
                break;
            case 5:
                urutkanData();
                break;
            case 0:
                cout << "Keluar dari program.\n";
                exit(0);
            default:
                cout << "Pilihan tidak valid!\n";
        }
    } while (pilih != 0);
}

int main() {
    while (!login()) {
        cout << "Silakan coba login kembali.\n\n";
    }
    bacaDariFile();
    menu();
    return 0;
}
